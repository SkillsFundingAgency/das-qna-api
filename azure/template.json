{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "serviceName": {
            "type": "string"
        },
        "customHostName": {
            "type": "string"
        },
        "certificateName": {
            "type": "string",
            "defaultValue": ""
        },
        "keyVaultName": {
            "type": "string",
            "defaultValue": ""
        },
        "keyVaultResourceGroup": {
            "type": "string",
            "defaultValue": ""
        },
        "configurationStorageConnectionString": {
            "type": "securestring"
        },
        "environmentName": {
            "type": "string"
        },
        "resourceEnvironmentName": {
            "type": "string"
        },
        "loggingRedisConnectionString": {
            "type": "securestring"
        },
        "loggingRedisKey": {
            "type": "securestring"
        },
        "aspSize": {
            "type": "string",
            "defaultValue": "1"
        },
        "aspInstances": {
            "type": "int",
            "defaultValue": 1
        },
        "sharedSqlServerName": {
            "type": "string"
        },
        "sharedSqlResourceGroup": {
            "type": "string"
        },
        "databaseSkuName": {
            "type": "string",
            "defaultValue": "S0"
        },
        "databaseTier": {
            "type": "string",
            "defaultValue": "Standard"
        },
        "logAnalyticsSubscriptionId": {
            "type": "string",
            "defaultValue": "[subscription().subscriptionId]"
        },
        "logAnalyticsResourceGroup": {
            "type": "string"
        },
        "logAnalyticsWorkspaceName": {
            "type": "string"
        },
        "appServiceAllowedIPs": {
            "type": "array",
            "defaultValue": []
        },
        "aseResourceGroup": {
            "type": "string",
            "defaultValue": ""
        },
        "aseHostingEnvironmentName": {
            "type": "string",
            "defaultValue": ""
        }
    },
    "variables": {
        "deploymentUrlBase": "https://raw.githubusercontent.com/SkillsFundingAgency/das-platform-building-blocks/master/templates/",
        "resourceNamePrefix": "[toLower(concat('das-', parameters('resourceEnvironmentName'),'-', parameters('serviceName')))]",
        "appServiceName": "[concat(variables('resourceNamePrefix'), '-as')]",
        "appServicePlanName": "[concat(variables('resourceNamePrefix'), '-asp')]",
        "databaseName": "[concat(variables('resourceNamePrefix'), '-db')]",
        "storageAccountName": "[tolower(concat('das', parameters('resourceEnvironmentName'), parameters('serviceName'), 'str' ))]"
    },
    "resources": [
        {
            "apiVersion": "2017-05-10",
            "name": "storage-account",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'), 'storage-account-arm.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "storageAccountName": {
                        "value": "[variables('storageAccountName')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2017-05-10",
            "name": "app-service-plan",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'), 'app-service-plan.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "appServicePlanName": {
                        "value": "[variables('appServicePlanName')]"
                    },
                    "aspLocation": {
                        "value": "West Europe"
                    },
                    "aspSize": {
                        "value": "[parameters('aspSize')]"
                    },
                    "aspInstances": {
                        "value": "[parameters('aspInstances')]"
                    },
                    "aseHostingEnvironmentName": {
                        "value": "[parameters('aseHostingEnvironmentName')]"
                    },
                    "aseResourceGroup": {
                        "value": "[parameters('aseResourceGroup')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2017-05-10",
            "name": "app-service-certificate",
            "type": "Microsoft.Resources/deployments",
            "condition": "[greater(length(parameters('certificateName')), 0)]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'app-service-certificate.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "keyVaultCertificateName": {
                        "value": "[parameters('certificateName')]"
                    },
                    "keyVaultName": {
                        "value": "[parameters('keyVaultName')]"
                    },
                    "keyVaultResourceGroup": {
                        "value": "[parameters('keyVaultResourceGroup')]"
                    },
                    "serverFarmId": {
                        "value": "[reference('app-service-plan').outputs.appServicePlanId.value]"
                    }
                }
            },
            "dependsOn": [
                "app-service-plan"
            ]
        },
        {
            "apiVersion": "2017-05-10",
            "name": "app-service",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'), 'app-service.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "appServiceName": {
                        "value": "[variables('appServiceName')]"
                    },
                    "appServicePlanName": {
                        "value": "[variables('appServicePlanName')]"
                    },
                    "appServicePlanResourceGroup": {
                        "value": "[resourceGroup().name]"
                    },
                    "deployStagingSlot": {
                        "value": true
                    },
                    "ipSecurityRestrictions": {
                        "value": "[parameters('appServiceAllowedIPs')]"
                    },
                    "appServiceAppSettings": {
                        "value": [
                            {
                                "name": "ConfigurationStorageConnectionString",
                                "value": "[parameters('configurationStorageConnectionString')]"
                            },
                            {
                                "name": "ASPNETCORE_ENVIRONMENT",
                                "value": "[toUpper(parameters('environmentName'))]"
                            },
                            {
                                "name": "LoggingRedisConnectionString",
                                "value": "[parameters('loggingRedisConnectionString')]"
                            },
                            {
                                "name": "LoggingRedisKey",
                                "value": "[parameters('loggingRedisKey')]"
                            },
                            {
                                "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                                "value": "[reference('app-insights').outputs.InstrumentationKey.value]"
                            },
                            {
                                "name": "Environment",
                                "value":  "[toUpper(parameters('environmentName'))]"
                            },
                            {
                                "name": "ConfigNames",
                                "value":  "SFA.DAS.QnA.Api"
                            },
                            {
                                "name": "AllowedHosts",
                                "value": "*"
                            }
                        ]
                    },
                    "appServiceConnectionStrings": {
                        "value": [
                            {
                                "name": "RedisLogging",
                                "connectionString": "[parameters('loggingRedisConnectionString')]",
                                "type": "Custom"
                            }
                        ]
                    },
                    "customHostName": {
                        "value": "[parameters('customHostName')]"
                    },
                    "certificateThumbprint": {
                        "value": "[if(greater(length(parameters('certificateName')), 0), reference('app-service-certificate').outputs.certificateThumbprint.value, '')]"
                    }
                }
            },
            "dependsOn": [
                "app-service-certificate",
                "app-service-plan"
            ]
        },
        {
            "apiVersion": "2017-08-01",
            "name": "app-insights",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'), 'application-insights.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "appInsightsName": {
                        "value": "[variables('appServiceName')]"
                    },
                    "attachedService": {
                        "value": "[variables('appServiceName')]"
                    }
                }
            },
            "dependsOn": []
        },
        {
            "apiVersion": "2017-05-10",
            "name": "sqlDatabase",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[parameters('sharedSqlResourceGroup')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'sql-database.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "databaseName": {
                        "value": "[variables('databaseName')]"
                    },
                    "sqlServerName": {
                        "value": "[parameters('sharedSqlServerName')]"
                    },
                    "databaseSkuName": {
                        "value": "[parameters('databaseSkuName')]"
                    },
                    "databaseTier": {
                        "value": "[parameters('databaseTier')]"
                    },
                    "logAnalyticsSubscriptionId": {
                        "value": "[parameters('logAnalyticsSubscriptionId')]"
                    },
                    "logAnalyticsResourceGroup": {
                        "value": "[parameters('logAnalyticsResourceGroup')]"
                    },
                    "logAnalyticsWorkspaceName": {
                        "value": "[parameters('logAnalyticsWorkspaceName')]"
                    }
                }
            }
        }
    ],
    "outputs": {
        "AppServiceName": {
            "type": "string",
            "value": "[variables('appServiceName')]"
        },
        "StorageConnectionString": {
            "type": "string",
            "value": "[reference('storage-account').outputs.storageConnectionString.value]"
        },
        "DatabaseName": {
            "type": "string",
            "value": "[variables('databaseName')]"
        }
    }
}