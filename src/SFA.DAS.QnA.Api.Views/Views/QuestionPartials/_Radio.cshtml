@using SFA.DAS.QnA.Api.Views
@model dynamic

@{
    var isError = Model.ErrorMessages != null && Model.ErrorMessages.Count > 0 ? "govuk-input--error" : "";
    var options = ViewHelpers.GetOptions(Model);
}

@if (Model.ErrorMessages != null && Model.ErrorMessages.Count > 0)
{
    foreach (var errorMessage in Model.ErrorMessages)
    {
        if (errorMessage.Field == Model.QuestionId)
        {
            <span class="govuk-error-message">@Html.Raw(errorMessage.ErrorMessage)</span>
        }
    }
}

<div class="govuk-form-group">

    @{
        var hasConditionalText = ((IEnumerable<dynamic>)options).Any(opt => opt.HasConditionalContentText);
        var shouldInlineOptions = options.Count <= 2;
        var cssClass = hasConditionalText ? "govuk-radios--conditional" : shouldInlineOptions ? "govuk-radios--inline" : "";
    }

    <div class="govuk-radios @cssClass" data-module="govuk-radios">
        @for (int i = 0; i < options.Count; i++)
        {
            var radioChecked = Model.Value == options[i].Value.ToString() ? "checked" : "";
            var optionId = Model.QuestionId + (i == 0 ? "" : "_" + i);

            <div class="govuk-radios__item">
                @if (options[i].HasHintText)
                {
                    <input class="govuk-radios__input"
                           type="radio"
                           id="@optionId"
                           name="@Model.QuestionId"
                           value="@options[i].Value"
                           data-aria-controls="conditional-@optionId"
                           aria-describedby="@optionId-hint"
                           @radioChecked />
                }
                else
                {
                    <input class="govuk-radios__input"
                           type="radio"
                           id="@optionId"
                           name="@Model.QuestionId"
                           value="@options[i].Value"
                           data-aria-controls="conditional-@optionId"
                           @radioChecked />
                }
                <label class="govuk-label govuk-radios__label" for="@(Model.QuestionId + (i == 0 ? "" : "_" + i))">@options[i].Label</label>
                <span id="@optionId-hint" class="govuk-hint govuk-radios__hint">
                    @Html.Raw(options[i].HintText)
                </span>
            </div>

            @if (options[i].HasConditionalContentText)
            {
                <div class="govuk-radios__conditional govuk-radios__conditional--hidden" id="conditional-@optionId">
                    @Html.Raw(options[i].ConditionalContentText)
                </div>
            }
        }
    </div>
</div>